{"organizations": [], "uuid": "6f0f9fcb346e2ef6544c774e2529f8521929e82b", "thread": {"social": {"gplus": {"shares": 41}, "pinterest": {"shares": 0}, "vk": {"shares": 0}, "linkedin": {"shares": 174}, "facebook": {"likes": 731, "shares": 731, "comments": 2}, "stumbledupon": {"shares": 0}}, "site_full": "techcrunch.com", "main_image": "https://tctechcrunch2011.files.wordpress.com/2016/06/securityhall.jpg?w=764&amp;h=400&amp;crop=1", "site_section": "", "section_title": "", "url": "https://techcrunch.com/2017/02/24/how-to-secure-your-data-after-the-cloudflare-leak/", "country": "US", "domain_rank": 697, "title": "How to secure your data after the Cloudflare leak | TechCrunch", "performance_score": 7, "site": "techcrunch.com", "participants_count": 0, "title_full": "How to secure your data after the Cloudflare leak | TechCrunch", "spam_score": 0.199, "site_type": "news", "published": "2017-02-25T07:47:00.000+02:00", "replies_count": 0, "uuid": "6f0f9fcb346e2ef6544c774e2529f8521929e82b"}, "author": "Kate Conger", "url": "https://techcrunch.com/2017/02/24/how-to-secure-your-data-after-the-cloudflare-leak/", "ord_in_thread": 0, "title": "How to secure your data after the Cloudflare leak | TechCrunch", "locations": [], "entities": {"persons": [], "locations": [], "organizations": []}, "highlightText": "", "language": "english", "persons": [], "text": "How to secure your data after the Cloudflare leak Posted Super Smash Borg Melee: AI takes on top players of the classic Nintendo fighting game \nCloudflare revealed yesterday that a bug in its code caused sensitive data to leak from some of the major websites that use its performance enhancement and security services. Uber, Fitbit, OkCupid and 1Password are among Cloudflare’s millions of clients, and it’s possible that personal data such as passwords and cookies leaked from many client websites during the five months before the bug was discovered and reported by Tavis Ormandy, a Google researcher. \nUnfortunately, it’s still not entirely clear how many Cloudflare customers were affected by the bug. The leaked data was cached by search engines in some cases, making the clean-up of the leak a difficult process. Although Google, Yahoo, Bing and other search engines worked to scrub the data before Cloudflare publicly disclosed the bug, researchers reported today that they were still finding samples of leaked data in search engine caches. You can still find random authentication cookies for sites affected by #CloudBleed with a simple Google search… and they work. Scary. \n— Hector Martin (@marcan42) February 24, 2017 \n“You can still find random authentication cookies for sites affected by #CloudBleed with a simple Google search… and they work,” Hector Martin, a security researcher, tweeted . (The Cloudflare incident has earned the nickname CloudBleed after being compared to the HeartBleed vulnerability.) Martin discovered an authentication cookie for a financial website, Motherboard reported. The cookie would allow an attacker to log in to the site without a password, posing as a regular user. \nGiven that sensitive data is still floating around in search engine caches, it’s a good idea to reset your account passwords and enable two-factor authentication. You should also use a password manager to generate unique passwords for the websites you visit. \nCloudflare hasn’t uncovered any evidence that the bug was discovered by anyone other than Ormandy — but it never hurts to refresh your passwords, particularly since they might still exposed in a cache. \nIt’s also a good idea for sites that use Cloudflare to issue a forced password reset to their users (some Cloudflare customers, like Creative Commons and Bugcrowd , are already doing this). Our data wasn't exposed in the Cloudflare leak, but we're requiring users to reset passwords just to be safe. More: https://t.co/2Yl97npnAv \n— Creative Commons (@creativecommons) February 24, 2017 \nYou can check out a list of Cloudflare customers to see if websites you use might be affected by the leak — but keep in mind that not all of Cloudflare’s clients were affected. Because of the way Cloudflare’s code was configured, the leak was at its worst for less than a week, when 1 in every 3,300,000 Cloudflare requests might have caused leakage. As Cloudflare notes , that’s just 0.00003% of requests. ", "external_links": [], "published": "2017-02-25T07:47:00.000+02:00", "crawled": "2017-02-25T02:52:17.990+02:00", "highlightTitle": ""}