{"organizations": [], "uuid": "9e508cbae38d9cba9c2c2931111a82f1c18e21f3", "thread": {"social": {"gplus": {"shares": 5}, "pinterest": {"shares": 0}, "vk": {"shares": 0}, "linkedin": {"shares": 71}, "facebook": {"likes": 223, "shares": 223, "comments": 0}, "stumbledupon": {"shares": 0}}, "site_full": "www.computerworld.com", "main_image": "http://images.techhive.com/images/article/2015/08/38849_7775-100610057-primary.idge.jpg", "site_section": "", "section_title": "", "url": "http://www.computerworld.com/article/3172511/security/java-and-python-ftp-attacks-can-punch-holes-through-firewalls.html", "country": "US", "domain_rank": 4542, "title": "Java and Python FTP attacks can punch holes through firewalls | Computerworld", "performance_score": 2, "site": "computerworld.com", "participants_count": 0, "title_full": "Java and Python FTP attacks can punch holes through firewalls | Computerworld", "spam_score": 0.0, "site_type": "news", "published": "2017-02-21T17:11:00.000+02:00", "replies_count": 0, "uuid": "9e508cbae38d9cba9c2c2931111a82f1c18e21f3"}, "author": "Lucian Constantin", "url": "http://www.computerworld.com/article/3172511/security/java-and-python-ftp-attacks-can-punch-holes-through-firewalls.html", "ord_in_thread": 0, "title": "Java and Python FTP attacks can punch holes through firewalls | Computerworld", "locations": [], "entities": {"persons": [], "locations": [], "organizations": []}, "highlightText": "", "language": "english", "persons": [], "text": "News Java and Python FTP attacks can punch holes through firewalls Hackers can trick Java and Python applications to execute rogue FTP commands that would open ports in firewalls Romania Correspondent, IDG News Service | Feb 21, 2017 10:11 AM PT Email a friend Use commas to separate multiple email addresses From Your message has been sent. Sorry There was an error emailing this page. Credit: IDGNS IT security: 3 things you need to know now \nThe Java and Python runtimes fail to properly validate FTP URLs, which can potentially allow attackers to punch holes through firewalls to access local networks. \nOn Saturday, security researcher Alexander Klink disclosed an interesting attack where exploiting an XXE (XML External Entity) vulnerability in a Java application can be used to send emails. \nXXE vulnerabilities can be exploited by tricking applications to parse specially crafted XML files that would force the XML parser to disclose sensitive information such as files, directory listings, or even information about processes running on the server. \nKlink showed that the same type of vulnerabilities can be used to trick the Java runtime to initiate FTP connections to remote servers by feeding it FTP URLs in the form of ftp://user:password@host:port/file.ext. \nHowever, it turns out that the built-in implementation of the FTP client in Java doesn't filter out special CR (carriage return) and LF (line feed) characters from URLs and actually interprets them. \nBy inserting such characters in the user or password portions of an FTP URL, the Java FTP client can be tricked to execute rogue commands and can even be tricked to speak SMTP (Simple Mail Transfer Protocol) because the syntax for SMTP and FTP is similar. \nKlink showed that by exploiting an XXE vulnerability and this quirk in Java's FTP client implementation, an attacker could force a Java application to send emails to an SMTP server. \n\"This attack is particularly interesting in a scenario where you can reach an (unrestricted, maybe not even spam- or malware-filtering) internal mail server from the machine doing the XML parsing,\" Klink said in a blog post . \nAfter seeing Klink's exploit, Timothy Morgan, a researcher with Blindspot Security, decided to disclose a similar attack that works against both Java's and Python's FTP implementations. But his attack is more serious because it can be used to punch holes through firewalls. \nMorgan calls the attack \"FTP protocol stream injection via malicious URLs\" and it also involves injecting rogue FTP commands by exploiting the absence of CRLF filtering. However, instead of injecting SMTP commands, Morgan abuses the FTP PORT command to trick the client into opening a data channel to a remote FTP server on a specific TCP port. \nAs the researcher points out, many Linux-based stateful packet inspection (SPI) firewalls, including commercial ones, support the classic mode of FTP translation and will automatically open a TCP port and forward it to an FTP client's LAN IP if they detect a PORT command in FTP traffic originating from that client. \nThis attack vector has been known for many years, which is why the developers of conntrack, a Linux set of tools that most firewalls use, have added an additional check. A port will be opened only if the PORT command appears at the very beginning of a TCP packet, to ensure that the client actually sent the command. \nThis poses a would-be attacker with two problems: First, discover the client's internal IP address in order to be able to spoof a PORT command, and then align the TCP packets between the client and the server so that the spoofed PORT command falls at the beginning of a packet. \nMorgan has found a way to do both of these things through his FTP protocol stream injection attack and claims to have developed a proof-of-concept exploit that he doesn't plan to release publicly until Oracle and Python correct their FTP client code. \n\"The entire attack (including the request used to determine the victim's internal IP) is typically accomplished with just three SSRF (Server Side Request Forgery) attacks to open up one TCP port,\" he said in a blog post Monday. \"Each additional SSRF attack could open up one additional TCP port.\" \nThere are multiple ways to exploit this issue, including using it against users with Java installed on their computers. Users don't even need to execute a malicious Java applet, because the exploit can be delivered through a Java Web Start application. \n\"If a desktop user could be convinced to visit a malicious website while Java is installed, even if Java applets are disabled, they could still trigger Java Web Start to parse a JNLP file,\" Morgan said. \"These files could contain malicious FTP URLs which trigger this bug.\" \nAttackers could also target servers where Java applications run by abusing a man-in-the-middle position on the network or by exploiting SSRF or XXE vulnerabilities in those applications. \nMorgan said he tested this attack against a custom Linux firewall running a recent kernel, as well as against firewalls from Palo Alto Networks and Cisco Systems that proved to be vulnerable under default settings. \n\"While testing of commercial firewalls has been very limited at this point, it seems likely that a significant percentage of production firewalls in the world are susceptible to attack through FTP protocol stream injections,\" he said. \nThe Java and Python developers have been notified of this problem, but until they fix their FTP client implementations, the researcher advises firewall vendors to disable classic-mode FTP translation by default. \nUsers should uninstall Java from their systems, or at least disable the browser plug-in and disassociate the .jnlp file extension from the Java Web Start binary. Meanwhile, Java and Python applications should be audited for SSRF and XXE flaws. However, XML parsing in Java is currently vulnerable by default, making XXE vulnerabilities very common on that platform, Morgan said. To express your thoughts on Computerworld content, visit Computerworld's Facebook page , LinkedIn page and Twitter stream . Related: ", "external_links": [], "published": "2017-02-21T17:11:00.000+02:00", "crawled": "2017-02-21T21:16:11.399+02:00", "highlightTitle": ""}