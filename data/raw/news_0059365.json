{"organizations": [], "uuid": "4d300501fb3ae7f34cee9ddbde820acea1fdff37", "thread": {"social": {"gplus": {"shares": 10}, "pinterest": {"shares": 0}, "vk": {"shares": 0}, "linkedin": {"shares": 69}, "facebook": {"likes": 335, "shares": 335, "comments": 0}, "stumbledupon": {"shares": 0}}, "site_full": "scotch.io", "main_image": "https://scotch.io/wp-content/uploads/2017/02/S6AHwG1dQDanXVxQX5Up_JSON-SERVER.png.jpg", "site_section": "", "section_title": "", "url": "https://scotch.io/tutorials/json-server-as-a-fake-rest-api-in-frontend-development", "country": "IO", "domain_rank": 10551, "title": "JSON-Server as a Fake REST API in Frontend Development | Scotch", "performance_score": 3, "site": "scotch.io", "participants_count": 0, "title_full": "JSON-Server as a Fake REST API in Frontend Development | Scotch", "spam_score": 0.063, "site_type": "news", "published": "2017-02-25T20:15:00.000+02:00", "replies_count": 0, "uuid": "4d300501fb3ae7f34cee9ddbde820acea1fdff37"}, "author": "", "url": "https://scotch.io/tutorials/json-server-as-a-fake-rest-api-in-frontend-development", "ord_in_thread": 0, "title": "JSON-Server as a Fake REST API in Frontend Development | Scotch", "locations": [], "entities": {"persons": [], "locations": [], "organizations": [{"name": "json", "sentiment": "none"}]}, "highlightText": "", "language": "english", "persons": [], "text": "JSON-Server as a Fake REST API in Frontend Development \nJSON Server to create REST JSON webservice Madhankumar Feb 07, 2017 Tutorials Comments 0 Code Introduction \nFrontend development is changing day by day and we have to learn a lot more stuff. When we start learning a new framework or library, the first thing that is recommended to build a todo list which helps in doing all CRUD functions. But there is no solid backend/library available to make use of it to build a todo list. \nSimulate a backend server and a REST API with a simple JSON file. \nTo overcome that problem json-server came into the picture. With it, we can make a fake REST api. I have used it in my app and thought of sharing it to the frontend community. \nJSON Server is an npm package that you can create a REST JSON webservice. All we need is a JSON file and that will be used as our backend REST. Installing JSON Server \nYou can either install it locally for specific project or globally. I will go with locally. $ npm install -D json-server \nAbove is a single line command to install the json server. -D Package will appear in your devDependencies . I am not going to explain about that much here. If you want to learn more about that go through the docs for npm install. Check JSON Server version using json-server -v . JSON file \nAs per the standard convention, I am going to name the file db.json , you can name it as per your needs. { \"Todos\": [ { \"id\": 1, \"todo\": \"Check Todo\" }, { \"id\": 2, \"todo\": \"New Todo\" } ] } \nFor simplicity I have included two elements into the Todos array. You can add more also. Start the JSON Server $ json-server --watch db.json \nYour JSON Server will be running on port 3000 . \nNow that we have our server and API running, we can test it and access it with a tool like POSTman or Insomnia . \nThese are REST clients that help us run http calls. CRUD Operations \nMoving onto the CRUD operations. This is how we can access our data using RESTful routes. Routing Url's [GET] http://localhost:3000/Todos [POST] http://localhost:3000/Todos post params:! [PUT] http://localhost:3000/Todos post params:! [DELETE] http://localhost:3000/Todos/id Testing via POSTman ", "external_links": [], "published": "2017-02-25T20:15:00.000+02:00", "crawled": "2017-02-25T15:22:05.221+02:00", "highlightTitle": ""}